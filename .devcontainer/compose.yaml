name: "podcast_builder"

services:
  rails-app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
    - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    depends_on:
    - selenium

  selenium:
    image: selenium/standalone-chromium
    restart: unless-stopped

  scpserver:
    # Explored a number of paths including putting ssh in the dev container
    # or creating a combined ssh and Nginx Dockerfile. In the end it was much
    # easier to have two very simple containers sharing a single volume.
    #
    # I picked this image because it was the first google result that looked
    # legitimate and worked. :) The code for it can be found here:
    # https://github.com/linuxserver/docker-openssh-server/tree/master
    image: lscr.io/linuxserver/openssh-server:latest
    container_name: openssh-server
    hostname: openssh-server #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - "PUBLIC_KEY=ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGvSI2hKDbN9JXP7+S2/oGZswfXy1krHXwilJ/nz9Ji0 Test Key"
      - USER_NAME=podcast_builder
    volumes:
    - htdocs:/config/htdocs

  httpd:
    # Apache alpine image is popular, tiny, and doesn't need configuration
    image: httpd:2.4-alpine
    ports:
    - 80:80
    volumes:
    - htdocs:/usr/local/apache2/htdocs

volumes:
  htdocs: # All files are expected to be uploaded, not read from host